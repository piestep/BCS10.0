<?xml version="1.0"?>
<body>
<test>
<name>For.</name>
<code>
<ln>package body SYNTAX is</ln>
<ln>   -- for</ln>
<ln>   type INDEX_TYPE is new INTEGER range 0 .. 10;</ln>
<ln>   procedure MAIN is</ln>
<ln>   begin</ln>
<ln>      for I in INDEX_TYPE range 1 .. 10 loop</ln>
<ln>          null;</ln>
<ln>      end loop;</ln>
<ln>   end MAIN;</ln>
<ln>end SYNTAX;</ln>
</code>
<graph>
<ln>[    1] : Compilation_Unit</ln>
<ln>             The_Unit [ 2 ]</ln>
<ln>          end Compilation_Unit</ln>
<ln></ln>
<ln>[    2] : Package_Body</ln>
<ln>            The_Name         SYNTAX</ln>
<ln>            {Package_Identifier SYNTAX}</ln>
<ln>            The_Declarations [ 3 ]</ln>
<ln>            The_Procedure    [ 4 ]</ln>
<ln>            The_Identifier   SYNTAX</ln>
<ln>            {Package_Identifier SYNTAX}</ln>
<ln>          end Package_Body</ln>
<ln></ln>
<ln>[    3] : Type_Declaration</ln>
<ln>            The_Identifier  INDEX_TYPE</ln>
<ln>            {Type_Identifier INDEX_TYPE; (Signed_Type  0, 10, 4. (Signed_Type -128, 127, 8. (Universal_Integer)))}</ln>
<ln>            The_Definition  [ 5 ]</ln>
<ln>          end Type_Declaration</ln>
<ln></ln>
<ln>[    5] : Range_Definition</ln>
<ln>            The_Identifier INTEGER</ln>
<ln>            {Type_Identifier INTEGER; (Signed_Type -128, 127, 8. (Universal_Integer))}</ln>
<ln>            The_First      [ 6 ]</ln>
<ln>            The_Last       [ 7 ]</ln>
<ln>          end Range_Definition</ln>
<ln></ln>
<ln>[    6] : Integer_Expression</ln>
<ln>            The_String     0</ln>
<ln>            The_Result [Constant_Operand (Universal_Integer)  0]</ln>
<ln>          end Integer_Expression</ln>
<ln></ln>
<ln>[    7] : Integer_Expression</ln>
<ln>            The_String     10</ln>
<ln>            The_Result [Constant_Operand (Universal_Integer)  10]</ln>
<ln>          end Integer_Expression</ln>
<ln></ln>
<ln>[    4] : Procedure_Body</ln>
<ln>            The_Name         MAIN</ln>
<ln>            {Procedure_Identifier MAIN}</ln>
<ln>            The_Statements   [ 8 ]</ln>
<ln>            The_Identifier  MAIN</ln>
<ln>            {Procedure_Identifier MAIN}</ln>
<ln>          end Procedure</ln>
<ln></ln>
<ln>[    8] : For_Statement</ln>
<ln>            The_Index        I</ln>
<ln>            {Index_Identifier I; (Signed_Type  0, 10, 4. (Signed_Type -128, 127, 8. (Universal_Integer)));  0}</ln>
<ln>            The_Definition   INDEX_TYPE</ln>
<ln>            {Type_Identifier INDEX_TYPE; (Signed_Type  0, 10, 4. (Signed_Type -128, 127, 8. (Universal_Integer)))}</ln>
<ln>            Is_Reverse       FALSE</ln>
<ln>            The_First        [ 9 ]</ln>
<ln>            The_Last         [ 10 ]</ln>
<ln>            The_Statements   [ 11 ]</ln>
<ln>          end For_Statement</ln>
<ln></ln>
<ln>[    9] : Integer_Expression</ln>
<ln>            The_String     1</ln>
<ln>            The_Result [Constant_Operand (Universal_Integer)  1]</ln>
<ln>          end Integer_Expression</ln>
<ln></ln>
<ln>[   10] : Integer_Expression</ln>
<ln>            The_String     10</ln>
<ln>            The_Result [Constant_Operand (Universal_Integer)  10]</ln>
<ln>          end Integer_Expression</ln>
<ln></ln>
<ln>[   11] : Null_Statement</ln>
<ln>          end Null_Statement</ln>
<ln></ln>
</graph>
</test>

<test>
<name>For_Reverse.</name>
<code>
<ln>package body SYNTAX is</ln>
<ln>   -- for</ln>
<ln>   type INDEX_TYPE is new INTEGER range 0 .. 10;</ln>
<ln>   procedure MAIN is</ln>
<ln>   begin</ln>
<ln>      for I in reverse INDEX_TYPE range 1 .. 10 loop</ln>
<ln>          null;</ln>
<ln>      end loop;</ln>
<ln>   end MAIN;</ln>
<ln>end SYNTAX;</ln>
</code>
<graph>
<ln>[    1] : Compilation_Unit</ln>
<ln>             The_Unit [ 2 ]</ln>
<ln>          end Compilation_Unit</ln>
<ln></ln>
<ln>[    2] : Package_Body</ln>
<ln>            The_Name         SYNTAX</ln>
<ln>            {Package_Identifier SYNTAX}</ln>
<ln>            The_Declarations [ 3 ]</ln>
<ln>            The_Procedure    [ 4 ]</ln>
<ln>            The_Identifier   SYNTAX</ln>
<ln>            {Package_Identifier SYNTAX}</ln>
<ln>          end Package_Body</ln>
<ln></ln>
<ln>[    3] : Type_Declaration</ln>
<ln>            The_Identifier  INDEX_TYPE</ln>
<ln>            {Type_Identifier INDEX_TYPE; (Signed_Type  0, 10, 4. (Signed_Type -128, 127, 8. (Universal_Integer)))}</ln>
<ln>            The_Definition  [ 5 ]</ln>
<ln>          end Type_Declaration</ln>
<ln></ln>
<ln>[    5] : Range_Definition</ln>
<ln>            The_Identifier INTEGER</ln>
<ln>            {Type_Identifier INTEGER; (Signed_Type -128, 127, 8. (Universal_Integer))}</ln>
<ln>            The_First      [ 6 ]</ln>
<ln>            The_Last       [ 7 ]</ln>
<ln>          end Range_Definition</ln>
<ln></ln>
<ln>[    6] : Integer_Expression</ln>
<ln>            The_String     0</ln>
<ln>            The_Result [Constant_Operand (Universal_Integer)  0]</ln>
<ln>          end Integer_Expression</ln>
<ln></ln>
<ln>[    7] : Integer_Expression</ln>
<ln>            The_String     10</ln>
<ln>            The_Result [Constant_Operand (Universal_Integer)  10]</ln>
<ln>          end Integer_Expression</ln>
<ln></ln>
<ln>[    4] : Procedure_Body</ln>
<ln>            The_Name         MAIN</ln>
<ln>            {Procedure_Identifier MAIN}</ln>
<ln>            The_Statements   [ 8 ]</ln>
<ln>            The_Identifier  MAIN</ln>
<ln>            {Procedure_Identifier MAIN}</ln>
<ln>          end Procedure</ln>
<ln></ln>
<ln>[    8] : For_Statement</ln>
<ln>            The_Index        I</ln>
<ln>            {Index_Identifier I; (Signed_Type  0, 10, 4. (Signed_Type -128, 127, 8. (Universal_Integer)));  0}</ln>
<ln>            The_Definition   INDEX_TYPE</ln>
<ln>            {Type_Identifier INDEX_TYPE; (Signed_Type  0, 10, 4. (Signed_Type -128, 127, 8. (Universal_Integer)))}</ln>
<ln>            Is_Reverse       TRUE</ln>
<ln>            The_First        [ 9 ]</ln>
<ln>            The_Last         [ 10 ]</ln>
<ln>            The_Statements   [ 11 ]</ln>
<ln>          end For_Statement</ln>
<ln></ln>
<ln>[    9] : Integer_Expression</ln>
<ln>            The_String     1</ln>
<ln>            The_Result [Constant_Operand (Universal_Integer)  1]</ln>
<ln>          end Integer_Expression</ln>
<ln></ln>
<ln>[   10] : Integer_Expression</ln>
<ln>            The_String     10</ln>
<ln>            The_Result [Constant_Operand (Universal_Integer)  10]</ln>
<ln>          end Integer_Expression</ln>
<ln></ln>
<ln>[   11] : Null_Statement</ln>
<ln>          end Null_Statement</ln>
<ln></ln>
</graph>
</test>
</body>

