<?xml version="1.0"?>
<body>

<test>
<name>Mod.</name>
<code>
<ln>package body SYNTAX is</ln>
<ln>   -- Declarations</ln>
<ln>   type MOD_TYPE is mod 12;</ln>
<ln>   procedure MAIN is</ln>
<ln>   begin</ln>
<ln>      null;</ln>
<ln>   end MAIN;</ln>
<ln>end SYNTAX;</ln>
</code>
<graph>
<ln>[    1] : Compilation_Unit</ln>
<ln>             The_Unit [ 2 ]</ln>
<ln>          end Compilation_Unit</ln>
<ln></ln>
<ln>[    2] : Package_Body</ln>
<ln>            The_Name         SYNTAX</ln>
<ln>            {Package_Identifier SYNTAX}</ln>
<ln>            The_Declarations [ 3 ]</ln>
<ln>            The_Procedure    [ 4 ]</ln>
<ln>            The_Identifier   SYNTAX</ln>
<ln>            {Package_Identifier SYNTAX}</ln>
<ln>          end Package_Body</ln>
<ln></ln>
<ln>[    3] : Type_Declaration</ln>
<ln>            The_Identifier  MOD_TYPE</ln>
<ln>            {Type_Identifier MOD_TYPE; (Modular_Type  0, 11, 12, 4. (Universal_Integer))}</ln>
<ln>            The_Definition  [ 5 ]</ln>
<ln>          end Type_Declaration</ln>
<ln></ln>
<ln>[    5] : Mod_Definition</ln>
<ln>            The_Expression  [ 6 ]</ln>
<ln>          end Mod_Definition</ln>
<ln></ln>
<ln>[    6] : Operand_Expression</ln>
<ln>            The_Result [Constant_Operand (Universal_Integer)  12]</ln>
<ln>          end Operand_Expression</ln>
<ln></ln>
<ln>[    4] : Procedure_Body</ln>
<ln>            The_Name         MAIN</ln>
<ln>            {Procedure_Identifier MAIN}</ln>
<ln>            The_Statements   [ 7 ]</ln>
<ln>            The_Identifier  MAIN</ln>
<ln>            {Procedure_Identifier MAIN}</ln>
<ln>          end Procedure</ln>
<ln></ln>
<ln>[    7] : Null_Statement</ln>
<ln>          end Null_Statement</ln>
<ln></ln>
</graph>
</test>

<test>
<name>Mod_Without_Range.</name>
<code>
<ln>package body SYNTAX is</ln>
<ln>   -- Declarations</ln>
<ln>   type MOD_TYPE is mod 12;</ln>
<ln>   type MOD_TYPE_WITHOUT_RANGE is new MOD_TYPE;</ln>
<ln>   procedure MAIN is</ln>
<ln>   begin</ln>
<ln>      null;</ln>
<ln>   end MAIN;</ln>
<ln>end SYNTAX;</ln>
</code>
<graph>
<ln>[    1] : Compilation_Unit</ln>
<ln>             The_Unit [ 2 ]</ln>
<ln>          end Compilation_Unit</ln>
<ln></ln>
<ln>[    2] : Package_Body</ln>
<ln>            The_Name         SYNTAX</ln>
<ln>            {Package_Identifier SYNTAX}</ln>
<ln>            The_Declarations [ 3 ]</ln>
<ln>            The_Procedure    [ 4 ]</ln>
<ln>            The_Identifier   SYNTAX</ln>
<ln>            {Package_Identifier SYNTAX}</ln>
<ln>          end Package_Body</ln>
<ln></ln>
<ln>[    3] : Type_Declaration</ln>
<ln>            The_Identifier  MOD_TYPE</ln>
<ln>            {Type_Identifier MOD_TYPE; (Modular_Type  0, 11, 12, 4. (Universal_Integer))}</ln>
<ln>            The_Definition  [ 5 ]</ln>
<ln>            The_Next        [ 6 ]</ln>
<ln>          end Type_Declaration</ln>
<ln></ln>
<ln>[    5] : Mod_Definition</ln>
<ln>            The_Expression  [ 7 ]</ln>
<ln>          end Mod_Definition</ln>
<ln></ln>
<ln>[    7] : Operand_Expression</ln>
<ln>            The_Result [Constant_Operand (Universal_Integer)  12]</ln>
<ln>          end Operand_Expression</ln>
<ln></ln>
<ln>[    6] : Type_Declaration</ln>
<ln>            The_Identifier  MOD_TYPE_WITHOUT_RANGE</ln>
<ln>            {Type_Identifier MOD_TYPE_WITHOUT_RANGE; (Modular_Type  0, 11, 12, 4. (Modular_Type  0, 11, 12, 4. (Universal_Integer)))}</ln>
<ln>            The_Definition  [ 8 ]</ln>
<ln>          end Type_Declaration</ln>
<ln></ln>
<ln>[    8] : Range_Definition</ln>
<ln>            The_Identifier MOD_TYPE</ln>
<ln>            {Type_Identifier MOD_TYPE; (Modular_Type  0, 11, 12, 4. (Universal_Integer))}</ln>
<ln>          end Range_Definition</ln>
<ln></ln>
<ln>[    4] : Procedure_Body</ln>
<ln>            The_Name         MAIN</ln>
<ln>            {Procedure_Identifier MAIN}</ln>
<ln>            The_Statements   [ 9 ]</ln>
<ln>            The_Identifier  MAIN</ln>
<ln>            {Procedure_Identifier MAIN}</ln>
<ln>          end Procedure</ln>
<ln></ln>
<ln>[    9] : Null_Statement</ln>
<ln>          end Null_Statement</ln>
<ln></ln>
</graph>
</test>
</body>
