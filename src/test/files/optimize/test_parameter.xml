<?xml version="1.0"?>
<body>

<test>
<name>Parameter.</name>
<code>
<ln>package body SYNTAX is</ln>
<ln></ln>
<ln>   type PARAM_TYPE is new INTEGER range 0 .. 10;</ln>
<ln>   A : PARAM_TYPE;</ln>
<ln></ln>
<ln>   procedure MAIN (B : PARAM_TYPE) is</ln>
<ln>   begin</ln>
<ln>      A := B;</ln>
<ln>   end MAIN;</ln>
<ln>end SYNTAX;</ln>
</code>
<graph>
<ln>[    1] : Compilation_Unit</ln>
<ln>             The_Unit [ 2 ]</ln>
<ln>          end Compilation_Unit</ln>
<ln></ln>
<ln>[    2] : Package_Body</ln>
<ln>            The_Name         SYNTAX</ln>
<ln>            {Package_Identifier SYNTAX}</ln>
<ln>            The_Declarations [ 3 ]</ln>
<ln>            The_Procedure    [ 4 ]</ln>
<ln>            The_Identifier   SYNTAX</ln>
<ln>            {Package_Identifier SYNTAX}</ln>
<ln>          end Package_Body</ln>
<ln></ln>
<ln>[    3] : Type_Declaration</ln>
<ln>            The_Identifier  PARAM_TYPE</ln>
<ln>            {Type_Identifier PARAM_TYPE; (Signed_Type  0, 10, 4. (Signed_Type -128, 127, 8. (Universal_Integer)))}</ln>
<ln>            The_Definition  [ 5 ]</ln>
<ln>            The_Next        [ 6 ]</ln>
<ln>          end Type_Declaration</ln>
<ln></ln>
<ln>[    5] : Range_Definition</ln>
<ln>            The_Identifier INTEGER</ln>
<ln>            {Type_Identifier INTEGER; (Signed_Type -128, 127, 8. (Universal_Integer))}</ln>
<ln>            The_First      [ 7 ]</ln>
<ln>            The_Last       [ 8 ]</ln>
<ln>          end Range_Definition</ln>
<ln></ln>
<ln>[    7] : Operand_Expression</ln>
<ln>            The_Result [Constant_Operand (Universal_Integer)  0]</ln>
<ln>          end Operand_Expression</ln>
<ln></ln>
<ln>[    8] : Operand_Expression</ln>
<ln>            The_Result [Constant_Operand (Universal_Integer)  10]</ln>
<ln>          end Operand_Expression</ln>
<ln></ln>
<ln>[    6] : Identifier_Declaration</ln>
<ln>            The_Identifier A</ln>
<ln>            {Variable_Identifier A; (Signed_Type  0, 10, 4. (Signed_Type -128, 127, 8. (Universal_Integer)));  0;  0}</ln>
<ln>            Constant       FALSE</ln>
<ln>            The_Definition [ 9 ]</ln>
<ln>          end Identifier_Declaration</ln>
<ln></ln>
<ln>[    4] : Procedure_Body</ln>
<ln>            The_Name         MAIN</ln>
<ln>            {Procedure_Identifier MAIN}</ln>
<ln>            The_Parameters   [ 10 ]</ln>
<ln>            The_Statements   [ 11 ]</ln>
<ln>            The_Identifier  MAIN</ln>
<ln>            {Procedure_Identifier MAIN}</ln>
<ln>          end Procedure</ln>
<ln></ln>
<ln>[   10] : Parameter</ln>
<ln>            The_Name        B</ln>
<ln>            {Parameter_Identifier B; (Signed_Type  0, 10, 4. (Signed_Type -128, 127, 8. (Universal_Integer))); TRUE; FALSE;  0}</ln>
<ln>            In              TRUE</ln>
<ln>            Out             FALSE</ln>
<ln>            The_Definition  PARAM_TYPE</ln>
<ln>            {Type_Identifier PARAM_TYPE; (Signed_Type  0, 10, 4. (Signed_Type -128, 127, 8. (Universal_Integer)))}</ln>
<ln>          end Parameter</ln>
<ln></ln>
<ln>[   11] : Assignment_Statement</ln>
<ln>            The_Variable   [ 12 ]</ln>
<ln>            The_Expression [ 13 ]</ln>
<ln>          end Assignment_Statement</ln>
<ln></ln>
<ln>[   12] : Variable</ln>
<ln>            The_Identifier  A</ln>
<ln>            {Variable_Identifier A; (Signed_Type  0, 10, 4. (Signed_Type -128, 127, 8. (Universal_Integer)));  0;  0}</ln>
<ln>            The_Result [Identifier_Operand (Signed_Type  0, 10, 4. (Signed_Type -128, 127, 8. (Universal_Integer))):{Variable_Identifier A; (Signed_Type  0, 10, 4. (Signed_Type -128, 127, 8. (Universal_Integer)));  0;  0}]</ln>
<ln>          end Variable</ln>
<ln></ln>
<ln>[   13] : Variable_Expression</ln>
<ln>            The_Variable   [ 14 ]</ln>
<ln>            The_Result [Identifier_Operand (Signed_Type  0, 10, 4. (Signed_Type -128, 127, 8. (Universal_Integer))):{Parameter_Identifier B; (Signed_Type  0, 10, 4. (Signed_Type -128, 127, 8. (Universal_Integer))); TRUE; FALSE;  0}]</ln>
<ln>          end Variable_Expression</ln>
<ln></ln>
<ln>[   14] : Variable</ln>
<ln>            The_Identifier  B</ln>
<ln>            {Parameter_Identifier B; (Signed_Type  0, 10, 4. (Signed_Type -128, 127, 8. (Universal_Integer))); TRUE; FALSE;  0}</ln>
<ln>            The_Result [Identifier_Operand (Signed_Type  0, 10, 4. (Signed_Type -128, 127, 8. (Universal_Integer))):{Parameter_Identifier B; (Signed_Type  0, 10, 4. (Signed_Type -128, 127, 8. (Universal_Integer))); TRUE; FALSE;  0}]</ln>
<ln>          end Variable</ln>
<ln></ln>
</graph>
</test>
</body>
