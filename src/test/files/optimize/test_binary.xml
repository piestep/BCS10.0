<?xml version="1.0"?>
<body>

<test>
<name>Relation_Constant.</name>
<code>
<ln>package body SYNTAX is</ln>
<ln></ln>
<ln>   A : BOOLEAN;</ln>
<ln></ln>
<ln>   procedure MAIN is</ln>
<ln>   begin</ln>
<ln>      A := 1 = 2;</ln>
<ln>   end MAIN;</ln>
<ln>end SYNTAX;</ln>
</code>
<graph>
<ln>[    1] : Compilation_Unit</ln>
<ln>             The_Unit [ 2 ]</ln>
<ln>          end Compilation_Unit</ln>
<ln></ln>
<ln>[    2] : Package_Body</ln>
<ln>            The_Name         SYNTAX</ln>
<ln>            {Package_Identifier SYNTAX}</ln>
<ln>            The_Declarations [ 3 ]</ln>
<ln>            The_Procedure    [ 4 ]</ln>
<ln>            The_Identifier   SYNTAX</ln>
<ln>            {Package_Identifier SYNTAX}</ln>
<ln>          end Package_Body</ln>
<ln></ln>
<ln>[    3] : Identifier_Declaration</ln>
<ln>            The_Identifier A</ln>
<ln>            {Variable_Identifier A; (Discrete_Type  0, 1, 1. (Universal_Boolean));  0;  0}</ln>
<ln>            Constant       FALSE</ln>
<ln>            The_Definition [ 5 ]</ln>
<ln>          end Identifier_Declaration</ln>
<ln></ln>
<ln>[    4] : Procedure_Body</ln>
<ln>            The_Name         MAIN</ln>
<ln>            {Procedure_Identifier MAIN}</ln>
<ln>            The_Statements   [ 6 ]</ln>
<ln>            The_Identifier  MAIN</ln>
<ln>            {Procedure_Identifier MAIN}</ln>
<ln>          end Procedure</ln>
<ln></ln>
<ln>[    6] : Assignment_Statement</ln>
<ln>            The_Variable   [ 7 ]</ln>
<ln>            The_Expression [ 8 ]</ln>
<ln>          end Assignment_Statement</ln>
<ln></ln>
<ln>[    7] : Variable</ln>
<ln>            The_Identifier  A</ln>
<ln>            {Variable_Identifier A; (Discrete_Type  0, 1, 1. (Universal_Boolean));  0;  0}</ln>
<ln>            The_Result [Identifier_Operand (Discrete_Type  0, 1, 1. (Universal_Boolean)):{Variable_Identifier A; (Discrete_Type  0, 1, 1. (Universal_Boolean));  0;  0}]</ln>
<ln>          end Variable</ln>
<ln></ln>
<ln>[    8] : Operand_Expression</ln>
<ln>            The_Result [Constant_Operand (Discrete_Type  0, 1, 1. (Universal_Boolean))  0]</ln>
<ln>          end Operand_Expression</ln>
<ln></ln>
</graph>
</test>

<test>
<name>Relation_Variable.</name>
<code>
<ln>package body SYNTAX is</ln>
<ln></ln>
<ln>   A : BOOLEAN;</ln>
<ln></ln>
<ln>   procedure MAIN is</ln>
<ln>   begin</ln>
<ln>      A := TRUE = A;</ln>
<ln>   end MAIN;</ln>
<ln>end SYNTAX;</ln>
</code>
<graph>
<ln>[    1] : Compilation_Unit</ln>
<ln>             The_Unit [ 2 ]</ln>
<ln>          end Compilation_Unit</ln>
<ln></ln>
<ln>[    2] : Package_Body</ln>
<ln>            The_Name         SYNTAX</ln>
<ln>            {Package_Identifier SYNTAX}</ln>
<ln>            The_Declarations [ 3 ]</ln>
<ln>            The_Procedure    [ 4 ]</ln>
<ln>            The_Identifier   SYNTAX</ln>
<ln>            {Package_Identifier SYNTAX}</ln>
<ln>          end Package_Body</ln>
<ln></ln>
<ln>[    3] : Identifier_Declaration</ln>
<ln>            The_Identifier A</ln>
<ln>            {Variable_Identifier A; (Discrete_Type  0, 1, 1. (Universal_Boolean));  0;  0}</ln>
<ln>            Constant       FALSE</ln>
<ln>            The_Definition [ 5 ]</ln>
<ln>          end Identifier_Declaration</ln>
<ln></ln>
<ln>[    4] : Procedure_Body</ln>
<ln>            The_Name         MAIN</ln>
<ln>            {Procedure_Identifier MAIN}</ln>
<ln>            The_Statements   [ 6 ]</ln>
<ln>            The_Identifier  MAIN</ln>
<ln>            {Procedure_Identifier MAIN}</ln>
<ln>          end Procedure</ln>
<ln></ln>
<ln>[    6] : Assignment_Statement</ln>
<ln>            The_Variable   [ 7 ]</ln>
<ln>            The_Expression [ 8 ]</ln>
<ln>          end Assignment_Statement</ln>
<ln></ln>
<ln>[    7] : Variable</ln>
<ln>            The_Identifier  A</ln>
<ln>            {Variable_Identifier A; (Discrete_Type  0, 1, 1. (Universal_Boolean));  0;  0}</ln>
<ln>            The_Result [Identifier_Operand (Discrete_Type  0, 1, 1. (Universal_Boolean)):{Variable_Identifier A; (Discrete_Type  0, 1, 1. (Universal_Boolean));  0;  0}]</ln>
<ln>          end Variable</ln>
<ln></ln>
<ln>[    8] : Binary_Expression</ln>
<ln>            The_Operator   EQUAL_SYMBOL</ln>
<ln>            The_Left       [ 9 ]</ln>
<ln>            The_Right      [ 10 ]</ln>
<ln>            The_Result [Variable_Operand (Discrete_Type  0, 1, 1. (Universal_Boolean))]</ln>
<ln>          end Binary_Expression</ln>
<ln></ln>
<ln>[    9] : Operand_Expression</ln>
<ln>            The_Result [Constant_Operand (Universal_Boolean)  1]</ln>
<ln>          end Operand_Expression</ln>
<ln></ln>
<ln>[   10] : Variable_Expression</ln>
<ln>            The_Variable   [ 11 ]</ln>
<ln>            The_Result [Identifier_Operand (Discrete_Type  0, 1, 1. (Universal_Boolean)):{Variable_Identifier A; (Discrete_Type  0, 1, 1. (Universal_Boolean));  0;  0}]</ln>
<ln>          end Variable_Expression</ln>
<ln></ln>
<ln>[   11] : Variable</ln>
<ln>            The_Identifier  A</ln>
<ln>            {Variable_Identifier A; (Discrete_Type  0, 1, 1. (Universal_Boolean));  0;  0}</ln>
<ln>            The_Result [Identifier_Operand (Discrete_Type  0, 1, 1. (Universal_Boolean)):{Variable_Identifier A; (Discrete_Type  0, 1, 1. (Universal_Boolean));  0;  0}]</ln>
<ln>          end Variable</ln>
<ln></ln>
</graph>
</test>

<test>
<name>Boolean_Constant.</name>
<code>
<ln>package body SYNTAX is</ln>
<ln></ln>
<ln>   A : BOOLEAN;</ln>
<ln></ln>
<ln>   procedure MAIN is</ln>
<ln>   begin</ln>
<ln>      A := TRUE and TRUE;</ln>
<ln>   end MAIN;</ln>
<ln>end SYNTAX;</ln>
</code>
<graph>
<ln></ln>
</graph>
</test>

<test>
<name>Boolean_Variable.</name>
<code>
<ln>package body SYNTAX is</ln>
<ln></ln>
<ln>   A : BOOLEAN;</ln>
<ln></ln>
<ln>   procedure MAIN is</ln>
<ln>   begin</ln>
<ln>      A := TRUE and A;</ln>
<ln>   end MAIN;</ln>
<ln>end SYNTAX;</ln>
</code>
<graph>
<ln></ln>
</graph>
</test>

<test>
<name>Integer_Constant.</name>
<code>
<ln>package body SYNTAX is</ln>
<ln></ln>
<ln>   type ID_TYPE is new INTEGER range -10 .. 10;</ln>
<ln>   A : ID_TYPE;</ln>
<ln></ln>
<ln>   procedure MAIN is</ln>
<ln>   begin</ln>
<ln>      A := 1 + 2;</ln>
<ln>   end MAIN;</ln>
<ln>end SYNTAX;</ln>
</code>
<graph>
<ln></ln>
</graph>
</test>

<test>
<name>Integer_Variable.</name>
<code>
<ln>package body SYNTAX is</ln>
<ln></ln>
<ln>   type ID_TYPE is new INTEGER range -10 .. 10;</ln>
<ln>   A : ID_TYPE;</ln>
<ln></ln>
<ln>   procedure MAIN is</ln>
<ln>   begin</ln>
<ln>      A := A + 1;</ln>
<ln>   end MAIN;</ln>
<ln>end SYNTAX;</ln>
</code>
<graph>
<ln></ln>
</graph>
</test>
</body>

